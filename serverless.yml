service: lambda-gurumi-ai-bot
provider:
  name: aws
  region: us-east-1
  runtime: python3.9
  # stage: prod
  # memorySize: 5120
  timeout: 600
  environment:
    BASE_NAME: gurumi-ai-bot
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - "arn:aws:dynamodb:*:*:table/${self:provider.environment.BASE_NAME}-*"
    - Effect: Allow
      Action:
        - bedrock:Retrieve
      Resource:
        - "arn:aws:bedrock:*:*:knowledge-base/*"
    - Effect: Allow
      Action:
        - bedrock:InvokeModel
      Resource:
        - "arn:aws:bedrock:*::foundation-model/anthropic.claude-*"
        - "arn:aws:bedrock:*::foundation-model/stability.stable-diffusion-*"

functions:
  mention:
    handler: handler.lambda_handler
    events:
      - http:
          method: post
          path: /slack/events

resources:
  Resources:
    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.BASE_NAME}-context
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TimeToLiveSpecification:
          AttributeName: expire_at
          Enabled: true
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName:
          Fn::Sub: ${self:provider.environment.BASE_NAME}-${AWS::AccountId}
    KnowledgeBase:
      Type: AWS::Bedrock::KnowledgeBase
      Properties:
        Name: ${self:provider.environment.BASE_NAME}-knowledge-base

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin
