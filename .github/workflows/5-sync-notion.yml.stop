name: sync-notion

on:
  # push:
  #   branches:
  #     - main

  schedule:
    - cron: "0 20 * * 0-4"

env:
  AWS_REGION: "us-east-1"
  AWS_ROLE_NAME: "lambda-gurumi-ai-bot"

  ENABLE_NOTION_SYNC: ${{ vars.ENABLE_NOTION_SYNC }}

  KNOWLEDGE_BASE_ID: ${{ vars.KNOWLEDGE_BASE_ID }}
  DATA_SOURCE_ID: ${{ vars.DATA_SOURCE_ID }}

  AWS_DEST_PATH: ${{ vars.AWS_DEST_PATH }}

  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  NOTION_PAGE_NAME: "nalbam"
  NOTION_PAGE_ID: "7aace0412a82431996f61a29225a95ec"

# Permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  sync:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.9 üêç
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Setup Dependencies
        run: pip install python-notion-exporter

      - name: Run Notion Exporter
        if: env.ENABLE_NOTION_SYNC == 'Yes'
        env:
          NOTION_TOKEN_V2: ${{ secrets.NOTION_TOKEN_V2 }}
          NOTION_FILE_TOKEN: ${{ secrets.NOTION_FILE_TOKEN }}
        run: |
          python bin/notion_exporter.py

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_NAME }}"
          role-session-name: github-actions-ci-bot
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync to AWS S3 Data Source
        if: env.ENABLE_NOTION_SYNC == 'Yes'
        run: |
          aws s3 sync --delete --region ${{ env.AWS_REGION }} \
            build/${{ env.NOTION_PAGE_NAME }}/ \
            ${{ env.AWS_DEST_PATH }}/${{ env.NOTION_PAGE_NAME }}/

      - name: Sync to AWS Bedrock Knowledge Base
        if: env.ENABLE_NOTION_SYNC == 'Yes' && env.KNOWLEDGE_BASE_ID != 'None' && env.DATA_SOURCE_ID != 'None'
        run: |
          aws bedrock-agent start-ingestion-job \
            --knowledge-base-id ${{ env.KNOWLEDGE_BASE_ID }} \
            --data-source-id ${{ env.DATA_SOURCE_ID }} \
            --region ${{ env.AWS_REGION }}
